include:
  - project: 'mobile/renovate-runner'
    ref: main
    file: '.gitlab-ci.yml'
    rules:
      - if: $CI_PIPELINE_SOURCE == "schedule"

stages:
  - health
  - build
  - release
  - deploy

.flutter_job:
  before_script:
    - export PATH="$PATH:$HOMEBREW_PREFIX/opt/grep/libexec/gnubin"
    - export PATH="$PATH:$HOME/fvm/default/bin"
    - export PATH="$PATH:$HOME/.pub-cache/bin"
    - export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
    - echo $PATH
    - fvm install && fvm flutter upgrade
    - fvm flutter pub get
    - (cd example ; fvm install && fvm flutter pub get)
  after_script:
    - git status
    - rm -rf .fvm/flutter_sdk
    - rm -rf example/.fvm/flutter_sdk

health_check:
  extends: .flutter_job
  stage: health
  variables:
    CI_TIMEOUT: 120
  tags:
    - werf-m1
  script:
    - ./scripts/analyze_for_errors.sh
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(master|main|develop)$/
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success

test:
  extends: .flutter_job
  stage: health
  variables:
    CI_TIMEOUT: 120
  needs:
    - health_check
  tags:
    - werf-m1
  artifacts:
    when: always
    expire_in: "1 days"
    reports:
      junit:
        - junit-report.xml
  script:
    - fvm flutter pub global activate junitreport
    - fvm flutter test --file-reporter json:tojunit.json
    - cat tojunit.json | $HOME/.pub-cache/bin/tojunit --output junit-report.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(master|main|develop)$/
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success


check:android:
  extends: .flutter_job
  stage: health
  variables:
    CI_TIMEOUT: 120
  needs:
    - health_check
  tags:
    - werf-m1
  script:
    - cd example
    - fvm flutter build apk --debug
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(master|main|develop)$/
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success

check:ios:
  extends: .flutter_job
  stage: health
  variables:
    CI_TIMEOUT: 120
  needs:
    - health_check
  tags:
    - werf-m1
  script:
    - cd example
    - fvm flutter build ipa --debug --no-codesign
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(master|main|develop)$/
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success

release:
  stage: release
  cache: {}
  tags:
    - werf-m1
  variables:
    CI: 1
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^(master|main)$/
      when: always
  before_script:
    - git tag -d $(git tag -l)
    - git fetch --tags --force
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog @semantic-release/git conventional-changelog-conventionalcommits
  script:
    - semantic-release
